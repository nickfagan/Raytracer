#include "intersection.hpp"

Intersection::Intersection(int t, Point3D point, Vector3D normal, Material* material)
	: mT(t), 
	mPoint(point), 
	mNormal(normal), 
	mMaterial(material),
	mNormalized(false) {
}

int Intersection::getT() {
  return mT;
}

Point3D Intersection::getPoint() {
  return mPoint;
}

Vector3D Intersection::getNormal() {
  if(!mNormalized) {
    mNormail.normalize();
    mNormalized = true;
  }
  return mNormal;
}

Material* Intersection::getMaterial() {
  return mMaterial;
}

void Intersection::setPoint(Point3D point) {
  mPoint = point;
}

void Intersection::setNormal(Vector3D normal) {
  mNormal = normal;
}
